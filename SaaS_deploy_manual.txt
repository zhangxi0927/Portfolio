Manual of deploying an SaaS application --Lychee

AWS:
1.新建instance
  new EC2 instance
2.自动分配public IP：选择启动
  allocate public IP
3.add storage：size填30GB
  add storage:choose 30GB size
4.安全新建，自己取名
  new security
5.下载key pair：“xxxxx.pem“
  download key pair
6.启动instance
  run EC2 instance


本地终端操作terminal(macOS)：
//更改模式，之前自由度太高了 
//change mode
chmod 0600 /your_pubkey_address/xxxxx.pem

//ssh连接到建立的AWS instance
//connect to AWS by ssh
ssh ec2-user@your_ip -i /your_pubkey_address/xxxxx.pem

//调整权限  sudo su -
sudo -i


//package installation
yum -y install httpd php php-gd php-mbstring php-mysql mysql-server

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//因为centos默认数据库为mainDB，所以先要把mainDB删掉才能安装mysql
//you have to delete centos's default database mainDB before you install mysql
yum remove mariadb-libs
rm -rf /var/lib/mysql/
yum localinstall http://dev.mysql.com/get/mysql57-community-release-el7-7.noarch.rpm
yum -y install mysql-community-server
mysqld --version
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


//http://www.kurobuti.com/document/lychee/install/Easy_Installation/index.html
//PHPとApachとMySqlの設定は書いたまま(3.1.2. PHPの設定,,3.1.3. Apacheの設定,,3.1.4. MySQLの設定)やれば大丈夫です

//PHP设定
//PHP settings
vi /etc/php.ini 
(snip)
;date.timezone =
↓ #変更
date.timezone = Asia/Tokyo
(snip)
max_execution_time = 30
↓ #変更
max_execution_time = 200
(snip)
post_max_size = 8M
↓ #変更
post_max_size = 200M
(snip)
upload_max_filesize = 2M
↓ #変更
upload_max_filesize = 20M
(snip)
# 追加
max_file_uploads = 100


//Apache设定
vi /etc/httpd/conf/httpd.conf 
(snip)
ServerTokens OS
↓ #変更
ServerTokens Prod
(snip)
#ServerName www.example.com:80
↓ #変更
ServerName ドメイン:80
(snip)
<Directory "/var/www/html">

#
# Possible values for the Options directive are "None", "All",
# or any combination of:
#   Indexes Includes FollowSymLinks SymLinksifOwnerMatch ExecCGI MultiViews
#
# Note that "MultiViews" must be named *explicitly* --- "Options All"
# doesn't give it to you.
#
# The Options directive is both complicated and important.  Please see
# http://httpd.apache.org/docs/2.2/mod/core.html#options
# for more information.
#
    Options Indexes FollowSymLinks
    ↓ #変更
    Options None

#
# AllowOverride controls what directives may be placed in .htaccess files.
# It can be "All", "None", or any combination of the keywords:
#   Options FileInfo AuthConfig Limit
#
    AllowOverride None

#
# Controls who can get stuff from this server.
#
    Order allow,deny
    Allow from all

</Directory>



//Apache自动启动设定
//Apache start automatically
chkconfig httpd on
//Apache启动
//start apache
systemctl start httpd  (/bin/systemctl start httpd.service)
//确认状态
//check status
service httpd status






//MySQL设定
//MySQL settings
vi /etc/my.cnf 
[mysqld]
datadir=/var/lib/mysql
socket=/var/lib/mysql/mysql.sock
user=mysql
# Disabling symbolic-links is recommended to prevent assorted security risks
symbolic-links=0

character-set-server = utf8 #追加
skip-character-set-client-handshake #追加

[mysql] #追加
default-character-set = utf8 #追加

[mysqld_safe]
log-error=/var/log/mysqld.log
pid-file=/var/run/mysqld/mysqld.pid



//mysql自动启动设定
//start mysql automatically
chkconfig mysqld on
//启动mysql
//start mysql
systemctl restart mysqld
service mysqld status



//重新设置密码 mysqlの初期化
//reset mysql password
//删除原来安装过的mysql残留的数据（这一步非常重要，问题就出在这）
//you have to delete cache first
rm -rf /var/lib/mysql
systemctl stop mysqld
systemctl set-environment MYSQLD_OPTS="--skip-grant-tables"
systemctl start mysqld
mysql -u root
mysql> UPDATE mysql.user SET authentication_string = PASSWORD('MyNewPassword') WHERE User = 'root' AND Host = 'localhost';
mysql> FLUSH PRIVILEGES;
mysql> quit
systemctl stop mysqld
systemctl unset-environment MYSQLD_OPTS
systemctl start mysqld


//马上就要改密码
alter user 'root'@'localhost' identified by 'techcE';
//但是我就想要简单的密码
set global validate_password_policy=0;
set global validate_password_length=1;
alter user 'root'@'localhost' identified by '123456';




//データベース作成とLyeecheのインストール
http://www.kurobuti.com/document/lychee/install/Easy_Installation/index.html
http://www.kurobuti.com/document/lychee/install/lychee_install/index-2.6.2.html 
//書いたままやれば大丈夫です
 //Lychee用DB作成
mysql -u root
create database photo;
grant all privileges on photo.* to photoadmin@localhost identified by ‘654321’;
quit

# Database configuration
$dbHost = 'localhost'; # Host of the database
$dbUser = 'photoadmin'; # Username of the database
$dbPassword = '654321'; # Password of the database
$dbName = 'photo'; # Database name
$dbTablePrefix = ''; # Table prefix



//Lychee
curl -L -o Lychee-2.6.2.zip https://github.com/electerious/Lychee/archive/v2.6.2.zip
unzip Lychee-2.6.2.zip
[root@localhost ~]# mkdir /var/www/html/lychee
[root@localhost ~]# mv Lychee-2.6.2/{favicon.ico,assets,index.html,php,data,uploads,view.php,plugins} /var/www/html/lychee
[root@localhost ~]# cd /var/www/html/
[root@localhost html]# chown -R apache:apache lychee/
[root@localhost html]# cd lychee/
[root@localhost lychee]# chmod 777 data/
[root@localhost lychee]# chmod -R 777 uploads/








AWS:
让ip不因maintenance和重启而不再变
弹性IP，
关联弹性ip
184.72.244.16
https://184.72.244.16/lychee/
ssl证明书，domain，server的证明书
要是，契约书，证明书
CSR：リクエスト用紙request用纸，写自己的名字，住址之类的
CRT：盖章，リクエスト用紙にハンコが押されたもの
CA：中間証明書といって、役所がハンコを押したという証明書
dig yahoo.co.jp  //


dns
https://it-jog.com/khow/serv/sslbyletsencrypt
sudo amazon-linux-extras install epel -y
sudo yum -y install mod_ssl
sudo yum -y install certbot
sudo systemctl stop httpd
sudo certbot certonly --standalone -d team5.edu.tech.ac.jp -m ririkka369@gmail.com
vim /etc/httpd/conf.d/ssl.conf
/////
/////
编辑
按i即可编辑
保存并退出
编辑完成后按Esc键，在界面左下角即可输入，输入：wq即可保存并退出。
systemctl start httpd
https://team5.edu.tech.ac.jp
https://team5.edu.tech.ac.jp
http://10.10.10.10/lychee


docker:::::
连接ssh
更新
sudo yum update -y

安装docker
（for amazon linux 2）
（sudo amazon-linux-extras install docker）
for amazon linux
sudo yum install docker

启动docker
sudo service docker start

将 ec2-user 添加到 docker 组，以便您能够执行 Docker 命令，而无需使用 sudo。
sudo usermod -a -G docker ec2-user

退出，再重新登录以接受新的 docker 组权限。您可以关闭当前的 SSH 终端窗口并在新终端窗口中重新连接到实例，完成这一过程。您的新 SSH 会话将具有相应的 docker 组权限。
验证 ec2-user 是否能在没有 sudo 的情况下运行 Docker 命令。
docker info
在某些情况下，您可能需要重新启动实例，以便为 ec2-user 提供访问 Docker 守护程序的权限。如果您看到以下错误，请尝试重启您的实例：
